list.files("../SimulationResults/")
allFiles = list.files("../SimulationResults/")
file = allFiles[1]
file
fileName = allFiles[1]
file = read.csv(paste0("../SimulationResults/",fileName))
View(file)
file = read.csv(paste0("../SimulationResults/",fileName),row.names = FALSE)
file = read.csv(paste0("../SimulationResults/",fileName),col.names = FALSE)
file = read.table(paste0("../SimulationResults/",fileName))
file = read.table(paste0("../SimulationResults/",fileName),sep = ",")
file = read.csv(paste0("../SimulationResults/",fileName))
?read.csv
file = read.csv(paste0("../SimulationResults/",fileName),row.names = FALSE)
file = read.csv(paste0("../SimulationResults/",fileName))
file = file[,-1]
shapiro.test(file$v_bh)
shapiro.test(file$v_con)
tmp = sum(rnorm(10000,0,1))
tmp
tmp = replicate(sum(rnorm(10000,0,1)),1000)
tmp = replicate(1000,sum(rnorm(10000,0,1)))
tmp
hist(tmp)
hist(file$v_bh)
hist(file$v_con)
tmp = replicate(1000,exp(sum(rnorm(10000,0,1))))
hist(tmp)
shapiro.test(tmp)
tmp
tmp = replicate(1000,sum(rnorm(10000,0,1)))
tmp
max(tmp)
min(tmp)
tmp = replicate(1000,sum(rnorm(10000,0,1))/300)
tmp
tmp = replicate(1000,exp(sum(rnorm(10000,0,1))/300))
shapiro.test(tmp)
qqnorm(file$v_bh)
qqnorm(file$v_con)
tmp
qqplot(tmp)
tmp
qqnorm(tmp)
file$v_bh
qqnorm(file$v_bh)
dt = 1/1000
sigma = 0.2
S_0 = 100
mu = 0.10
ln_S = cumsum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)
n  = 1000
ln_S = cumsum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)
ln_s
ln_S
e^ln_S
exp(ln_S)
hist(exp(ln_S))
qqnorm(exp(ln_S))
shapiro.test(exp(ln_S))
tmp = replicate(1000,exp(sum(rnorm(10000,0,1)))[10000])
tmp
ln_S = sum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)
ln_S
replicate(1000,sum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0))
tmp2 = replicate(1000,sum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0))
qqnorm(tmp2)
tmp2 = replicate(1000,exp(sum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)))
tmp2
qqnorm(tmp2)
shapiro.test(tmp2)
shapiro.test(file$v_bh)
shapiro.test(file$v_con)
qqnorm(file$v_bh)
qqnorm(file$v_con)
t.test(file$v_bh,file$v_con)
t.test(file$v_bh,file$v_con,var.equal = FALSE)
fileName
allFiles
length(allFiles)
allFiles[3234/2]
allFiles[3234/2+1]
allFiles = list.files("../SimulationResults/")
allFiles = allFiles[1:(length(allFiles)/2)]
fileName
split(fileName,"_")
strsplit(fileName,"_")
strsplit(fileName,"_")[[1]][1:3]
as.numeric(strsplit(fileName,"_")[[1]][1:3])
df = rbind()
df
shapiro.test(file$v_bh)
shapiro.test(file$v_bh)[1]
shapiro.test(file$v_bh)[2]
class(shapiro.test(file$v_bh)[2])
shapiro.test(file$v_bh)[[1]]
shapiro.test(file$v_bh)[[2]]
t.test(file$v_bh,file$v_con,var.equal = FALSE)
res = t.test(file$v_bh,file$v_con,var.equal = FALSE)
res$statistic
res$p.value
t.test(file$v_bh,file$v_con,var.equal = FALSE)$p.value
df = rbind()
for(i in 1:length(allFiles)){
fileName = allFiles[i]
params = as.numeric(strsplit(fileName,"_")[[1]][1:3])
file = read.csv(paste0("../SimulationResults/",fileName))
file = file[,-1]
res1 = shapiro.test(file$v_bh)[[2]]
res2 = shapiro.test(file$v_con)[[2]]
res3 = t.test(file$v_bh,file$v_con,var.equal = FALSE)$p.value
df = rbind(df,c(params,res1,res2,res3))
print(i)
}
df
df = rbind()
for(i in 1:length(allFiles)){
fileName = allFiles[i]
params = as.numeric(strsplit(fileName,"_")[[1]][1:3])
file = read.csv(paste0("../SimulationResults/",fileName))
file = file[,-1]
res = tryCatch({
c(shapiro.test(file$v_bh)[[2]],
shapiro.test(file$v_con)[[2]],
t.test(file$v_bh,file$v_con,var.equal = FALSE)$p.value)
},error = function(e){
c(NA,NA,NA)
})
df = rbind(df,round(c(params,res),3))
print(i)
}
df
View(df)
class(df)
as.data.frame(df)
df = as.data.frame(df)
colnames(df)
colnames(df) = c("mu","sigma","r","norm_bh","norm_con","t_test")
colnames(df) = c("mu","sigma","r","norm_bh","norm_con","pValue")
df$isNorm_bh = df$norm_bh > 0.10
df$isNorm_con = df$norm_con > 0.10
df$isNorm_bh = df$norm_bh > 0.10
df$isNorm_con = df$norm_con > 0.10
df$isDifferent = df$pValue < 0.05
df[which(df$isNorm_bh & df$isNorm_con & df$isDifferent),]
View(df[which(df$isNorm_bh & df$isNorm_con & df$isDifferent),])
write.csv(df,"test_mean.csv")
file
i  =1
fileName = allFiles[i]
params = as.numeric(strsplit(fileName,"_")[[1]][1:3])
file = read.csv(paste0("../SimulationResults/",fileName))
file = file[,-1]
file
var.test(file$v_bh,file$v_con)
var.test(file$v_bh,file$v_con)$p.value
allFiles = list.files("../SimulationResults/")
allFiles = allFiles[1:(length(allFiles)/2)]
df = rbind()
for(i in 1:length(allFiles)){
fileName = allFiles[i]
params = as.numeric(strsplit(fileName,"_")[[1]][1:3])
file = read.csv(paste0("../SimulationResults/",fileName))
file = file[,-1]
res = tryCatch({
c(shapiro.test(file$v_bh)[[2]],
shapiro.test(file$v_con)[[2]],
t.test(file$v_bh,file$v_con,var.equal = FALSE)$p.value,
var.test(file$v_bh,file$v_con)$p.value)
},error = function(e){
c(NA,NA,NA,NA)
})
df = rbind(df,round(c(params,res),3))
print(i)
}
df = as.data.frame(df)
colnames(df) = c("mu","sigma","r","norm_bh","norm_con","mean_test","var_test")
df$isNorm_bh = df$norm_bh > 0.10
df$isNorm_con = df$norm_con > 0.10
df$isMeanDiff = df$mean_test < 0.05
df$isVarDiff = df$var_test < 0.05
View(df[which(df$isNorm_bh & df$isNorm_con & df$isDifferent),])
write.csv(df,"test.csv")
View(df[which(df$isNorm_bh & df$isNorm_con & df$isMeanDiff),])
ln_S = cumsum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)
S = exp(ln_S)
B = cumsum(rep(r*B_0*dt,n))+B_0
Portfolio_init()
#Buy and hold strategy
V_bh = numS*S + numB*B
#Continuous Rebalance
Portfolio_init()
for(i in 1:n)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
V_con = V
#New Approach
Portfolio_init()
for(i in 1:n)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
if(numS*S[i] > 0.6*tmpV){
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
}
V_new = V
df = read.csv("test.csv")
View(df)
df = df[,-1]
View(df)
df = df[which(df$isNorm_bh & df$isNorm_con),]
df1 = df[which(df$isMeanDiff & df$isVarDiff),]
df2 = df[which(!df$isMeanDiff | !df$isVarDiff),]
nrow(df)
nrow(df1)
nrow(df2)
df1 = df1[,-c(4,5,8,9)]
df2 = df2[,-c(4,5,8,9)]
write.csv(df1,"df1.csv")
write.csv(df2,"df2.csv")
