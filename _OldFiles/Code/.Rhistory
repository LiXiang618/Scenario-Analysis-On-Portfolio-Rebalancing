tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
V_con = V
Cash = 1
Portfolio_init = function()
{
Cash = 1000000
w1 = 0.5
w2 = 0.5
numS = Cash*w1/S_0
numB = Cash*w2/B_0
V_0 = numS*S_0 + numB*B_0
}
Portfolio_init()
Cash
Portfolio_init = function()
{
Cash <<- 1000000
w1 <<- 0.5
w2 <<- 0.5
numS <<- Cash*w1/S_0
numB <<- Cash*w2/B_0
V_0 <<- numS*S_0 + numB*B_0
}
Portfolio_init()
Cash
#Basic parameters
T = 1
n = 25200
dt = 1/n
#Stock Simulation
mu = 0.90
sigma = 0.20
S_0 = 100
ln_S = cumsum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)
S = exp(ln_S)
#Risk-free asset simulation
r = 0.02
B_0 = 100
B = cumsum(rep(r*B_0*dt,n))+B_0
#Portfolio Initiation
Portfolio_init = function()
{
Cash <<- 1000000
w1 <<- 0.5
w2 <<- 0.5
numS <<- Cash*w1/S_0
numB <<- Cash*w2/B_0
V_0 <<- numS*S_0 + numB*B_0
Cash <<- Cash - V_0
}
V_bh = numS*S + numB*B
Cash
V_0
Portfolio_init()
Cash
Portfolio_init()
numS
V_bh = numS*S + numB*B
Portfolio_init = function()
{
Cash <<- 1000000
w1 <<- 0.5
w2 <<- 0.5
numS <<- Cash*w1/S_0
numB <<- Cash*w2/B_0
V_0 <<- numS*S_0 + numB*B_0
Cash <<- Cash - V_0
V = c()
}
Portfolio_init()
#Basic parameters
T = 1
n = 25200
dt = 1/n
#Stock Simulation
mu = 0.90
sigma = 0.20
S_0 = 100
ln_S = cumsum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)
S = exp(ln_S)
#Risk-free asset simulation
r = 0.02
B_0 = 100
B = cumsum(rep(r*B_0*dt,n))+B_0
#Portfolio Initiation
Portfolio_init = function()
{
Cash <<- 1000000
w1 <<- 0.5
w2 <<- 0.5
numS <<- Cash*w1/S_0
numB <<- Cash*w2/B_0
V_0 <<- numS*S_0 + numB*B_0
Cash <<- Cash - V_0
V = c()
}
Portfolio_init()
#Buy and hold strategy
V_bh = numS*S + numB*B
#Daily Rebalance
Portfolio_init()
for(i in 1:n)
{
if(i%%(n/252)==0)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
}
V_daily = V
#Monthly Rebalance
Portfolio_init()
for(i in 1:n)
{
if(i%%(n/12)==0)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
}
V_mon = V
#Continuous Rebalance
Portfolio_init()
for(i in 1:n)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
V_con = V
par(mfrow=c(2,2))
plot(V_bh,type = "l",col = "green")
plot(V_daily,type = "l",col = "pink")
plot(V_mon,type = "l",col = "red")
plot(V_con,type = "l",col = "purple")
#Portfolio Initiation
Portfolio_init = function()
{
Cash <<- 1000000
w1 <<- 0.5
w2 <<- 0.5
numS <<- Cash*w1/S_0
numB <<- Cash*w2/B_0
V_0 <<- numS*S_0 + numB*B_0
Cash <<- Cash - V_0
V = c()
}
Portfolio_init()
V_bh = numS*S + numB*B
V_bh
#Daily Rebalance
Portfolio_init()
for(i in 1:n)
{
if(i%%(n/252)==0)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
}
V_daily = V
V
#Basic parameters
T = 1
n = 25200
dt = 1/n
#Stock Simulation
mu = 0.90
sigma = 0.20
S_0 = 100
ln_S = cumsum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)
S = exp(ln_S)
#Risk-free asset simulation
r = 0.02
B_0 = 100
B = cumsum(rep(r*B_0*dt,n))+B_0
#Portfolio Initiation
Portfolio_init = function()
{
Cash <<- 1000000
w1 <<- 0.5
w2 <<- 0.5
numS <<- Cash*w1/S_0
numB <<- Cash*w2/B_0
V_0 <<- numS*S_0 + numB*B_0
Cash <<- Cash - V_0
V = c()
}
Portfolio_init()
#Buy and hold strategy
V_bh = numS*S + numB*B
V
#Basic parameters
T = 1
n = 25200
dt = 1/n
#Stock Simulation
mu = 0.90
sigma = 0.20
S_0 = 100
ln_S = cumsum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)
S = exp(ln_S)
#Risk-free asset simulation
r = 0.02
B_0 = 100
B = cumsum(rep(r*B_0*dt,n))+B_0
#Portfolio Initiation
Portfolio_init = function()
{
Cash <<- 1000000
w1 <<- 0.5
w2 <<- 0.5
numS <<- Cash*w1/S_0
numB <<- Cash*w2/B_0
V_0 <<- numS*S_0 + numB*B_0
Cash <<- Cash - V_0
V <<- c()
}
Portfolio_init()
#Buy and hold strategy
V_bh = numS*S + numB*B
#Daily Rebalance
Portfolio_init()
for(i in 1:n)
{
if(i%%(n/252)==0)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
}
V_daily = V
#Monthly Rebalance
Portfolio_init()
for(i in 1:n)
{
if(i%%(n/12)==0)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
}
V_mon = V
#Continuous Rebalance
Portfolio_init()
for(i in 1:n)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
V_con = V
par(mfrow=c(2,2))
plot(V_bh,type = "l",col = "green")
plot(V_daily,type = "l",col = "pink")
plot(V_mon,type = "l",col = "red")
plot(V_con,type = "l",col = "purple")
#Basic parameters
T = 1
n = 25200
dt = 1/n
#Stock Simulation
mu = 0.90
sigma = 0.20
S_0 = 100
ln_S = cumsum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)
S = exp(ln_S)
#Risk-free asset simulation
r = 0.02
B_0 = 100
B = cumsum(rep(r*B_0*dt,n))+B_0
#Portfolio Initiation
Portfolio_init = function()
{
Cash <<- 1000000
w1 <<- 0.5
w2 <<- 0.5
numS <<- Cash*w1/S_0
numB <<- Cash*w2/B_0
V_0 <<- numS*S_0 + numB*B_0
Cash <<- Cash - V_0
V <<- c()
}
Portfolio_init()
#Buy and hold strategy
V_bh = numS*S + numB*B
#Daily Rebalance
Portfolio_init()
for(i in 1:n)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
if(i%%(n/252)==0)
{
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
}
V_daily = V
#Monthly Rebalance
Portfolio_init()
for(i in 1:n)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
if(i%%(n/12)==0)
{
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
}
V_mon = V
#Continuous Rebalance
Portfolio_init()
for(i in 1:n)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
V_con = V
par(mfrow=c(2,2))
plot(V_bh,type = "l",col = "green")
plot(V_daily,type = "l",col = "pink")
plot(V_mon,type = "l",col = "red")
plot(V_con,type = "l",col = "purple")
df = data.frame(V_bh,V_daily,V_mon,V_con)
View(df)
#Basic parameters
T = 1
n = 25200
dt = 1/n
#Stock Simulation
mu = 0.10
sigma = 0.20
S_0 = 100
ln_S = cumsum(rnorm(n,0,1)*sigma*sqrt(dt) + mu*dt) + log(S_0)
S = exp(ln_S)
#Risk-free asset simulation
r = 0.02
B_0 = 100
B = cumsum(rep(r*B_0*dt,n))+B_0
#Portfolio Initiation
Portfolio_init = function()
{
Cash <<- 1000000
w1 <<- 0.5
w2 <<- 0.5
numS <<- Cash*w1/S_0
numB <<- Cash*w2/B_0
V_0 <<- numS*S_0 + numB*B_0
Cash <<- Cash - V_0
V <<- c()
}
Portfolio_init()
#Buy and hold strategy
V_bh = numS*S + numB*B
#Daily Rebalance
Portfolio_init()
for(i in 1:n)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
if(i%%(n/252)==0)
{
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
}
V_daily = V
#Monthly Rebalance
Portfolio_init()
for(i in 1:n)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
if(i%%(n/12)==0)
{
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
}
V_mon = V
#Continuous Rebalance
Portfolio_init()
for(i in 1:n)
{
tmpV = numS*S[i]+numB*B[i]+Cash
V = c(V,tmpV)
numS = floor(tmpV*w1/S[i])
numB = floor(tmpV*w2/B[i])
Cash = tmpV - numS*S[i] - numB*B[i]
}
V_con = V
df = data.frame(V_bh,V_daily,V_mon,V_con)
View(df)
par(mfrow=c(2,2))
plot(V_bh,type = "l",col = "green")
plot(V_daily,type = "l",col = "pink")
plot(V_mon,type = "l",col = "red")
plot(V_con,type = "l",col = "purple")
v_bh = c()
v_daily = c()
v_mon = c()
v_con = c()
tail(V_bh)
tail(V_bh,1)
v_bh = c(v_bh,tail(V_bh,1))
v_bh = c()
v_daily = c()
v_mon = c()
v_con = c()
for(i in 1:1000){
source("code.R")
v_bh = c(v_bh,tail(V_bh,1))
v_daily = c(v_daily,tail(V_daily,1))
v_mon = c(v_mon,tail(V_mon,1))
v_con = c(v_con,tail(V_con,1))
print(i)
}
v_bh = c()
v_daily = c()
v_mon = c()
v_con = c()
for(index in 1:1000){
source("code.R")
v_bh = c(v_bh,tail(V_bh,1))
v_daily = c(v_daily,tail(V_daily,1))
v_mon = c(v_mon,tail(V_mon,1))
v_con = c(v_con,tail(V_con,1))
print(index)
}
v_bh
v_daily
v_bh = c()
v_daily = c()
v_mon = c()
v_con = c()
for(index in 1:1000){
source("code.R")
v_bh = c(v_bh,tail(V_bh,1))
v_daily = c(v_daily,tail(V_daily,1))
v_mon = c(v_mon,tail(V_mon,1))
v_con = c(v_con,tail(V_con,1))
print(index)
}
v_bh
v_bh
v_daily
v_mon
v_con
par(mfrow=c(2,2))
hist(v_bh)
?hist
hist(v_bh,100)
par(mfrow=c(2,2))
hist(v_bh,100)
hist(v_daily,100)
hist(v_mon,100)
hist(v_con,100)
par(mfrow=c(2,2))
plot(V_bh,type = "l",col = "green")
plot(V_daily,type = "l",col = "pink")
plot(V_mon,type = "l",col = "red")
plot(V_con,type = "l",col = "purple")
df = data.frame(V_bh,V_daily,V_mon,V_con)
View(df)
S
plot(S)
skewness
library(e1071)
install.packages("e1071")
library(e1071)
skewness
skewness(v_bh)
skewness(v_daily)
skewness(v_mon)
skewness(v_con)
rm(list = ls())
library(e1071)
#Basic parameters
T = 1
